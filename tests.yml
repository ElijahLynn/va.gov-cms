# If any of these test names get updated they need to be updated here too
# https://github.com/department-of-veterans-affairs/va.gov-cms/settings/branch_protection_rules

# va/error:
#  command: intentionalFailure
#  description: Intentional Failure. Uncomment to test CI system failure behavior.

va/tests/phplint:
  description: PHP Lint
  command: composer va:test:lint

va/tests/phpunit:
  description: PHPUnit
  command: phpunit --exclude-group disabled tests/phpunit --colors=always

va/tests/accessibility:
  description: accessibility test with cypress-axe for 508 compliance
  command: composer va:test:accessibility

va/tests/behavioral:
  description: behavioral tests with cypress
  command: composer va:test:behavioral

va/web/install:
  description: Install VA.gov node environment
  command: composer va:web:install

va/web/build:
  description: Build VA.gov Front-end

  # NOTE: If we used the `va:web:build` command directly, it would throw a false positive if it were to exit 0.
  # Instead of presuming that it will always exit 0 if unable to read Drupal content, we make sure to check for the error as well.
  #
  # So, we decided to keep the "grep" for the Metalsmith error message to ensure that we catch the situation where the
  # error is shown, but the command exits successfully (exit 0).
  command: composer va:web:build | tee /dev/stderr | grep "Failed to pipe Drupal content into Metalsmith!" -B1000 -C8 && echo "tests.yml | composer va:web:build included the Drupal/Metalsmith error." && exit 1 || echo "tests.yml | Front end site was built! Check $DRUPAL_ADDRESS/static for raw output!"

va/tests/behat:
  description: Behat Tests
  command: |
    cd tests/behat
    behat --colors

va/tests/revision-log:
  description: Ensure revision log field is present
  command: ./tests/scripts/check-revision-logs.sh

va/tests/linkit-log:
  description: Ensure linkit widget is used in lieu of core link widget
  command: ./tests/scripts/check-linkit-logs.sh

va/tests/status-error:
  description: Check for Drupal status errors
  command: "drush $DRUSH_ALIAS core-requirements --severity=2 | grep . && exit 1 || echo 'Success: No Drupal status requirement errors were found.'"
